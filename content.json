{"meta":{"title":"Code皮皮虾","subtitle":"","description":"","author":"Code皮皮虾","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"Hexo+github快速搭建个人博客","slug":"Hexo+github快速搭建个人博客","date":"2020-05-13T13:03:53.696Z","updated":"2020-05-13T13:03:39.839Z","comments":true,"path":"2020/05/13/Hexo+github快速搭建个人博客/","link":"","permalink":"http://yoursite.com/2020/05/13/Hexo+github%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"一、安装环境1.1、安装nodejsNodejs安装地址 安装完成后打开cmd命令行查看,出现版本号即安装成功。更换npm镜像源 1.单次使用 1npm install --registry=https://registry.npm.taobao.org 2.永久使用 1npm config set registry http://registry.npm.taobao.org 2.检测是否成功 1234使用如下命令来验证npm config get registry或者npm info express 1.2、安装gitgit安装地址 安装完成后桌面鼠标右键 对git操作不熟悉或没学过的读者们给大家推荐一波Git视频教程，Up主讲的很不错！ 【狂神说】一小时掌握git 二、安装hexo博客框架打开cmd命令行运行命令 1234npm install -g hexo-cli安装完成后使用hexo-v验证是否安装成功 三、开始构建博客 温馨提示 : 按住ctrl+滚轮可调整字体大小 开始初始化 1hexo init 启动博客 1hexo s 默认地址是： http://localhost:4000浏览器访问 ：http://localhost:4000即可看见 四、创建自己第一篇博客1ctrl + c (关闭) 创建博客 1hexo n \"文章名称\" 编辑博客 执行以下命令 12345hexo clean (清理)hexo g (生成)hexo s (启动) 再次访问 http://localhost:4000 即可看见 创建并编辑博客成功！ 五、将博客部署到github上github官网 没有账号的先创建一个账号 登录成功后，创建一个仓库 12注意：仓库名要和账号名一样仓库名 = 账号名 + .github.io 安装git部署插件 1npm install hexo-deployer-git --save 部署到github 1hexo d 输入github账号和密码 部署成功 浏览器输入该地址即可访问，这样别人也可以访问了。(可以偷偷在朋友面前小小的装一下了，(&gt;ω･* )ﾉ) 六、更换博客主题可参考我的另一篇博客https://blog.csdn.net/llllllkkkkkooooo/article/details/106104157 最后，谢谢大家阅读！","categories":[],"tags":[]},{"title":"Hexo+github更换博客主题","slug":"Hexo+github更换博客主题","date":"2020-05-13T13:03:51.805Z","updated":"2020-05-13T13:03:43.248Z","comments":true,"path":"2020/05/13/Hexo+github更换博客主题/","link":"","permalink":"http://yoursite.com/2020/05/13/Hexo+github%E6%9B%B4%E6%8D%A2%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98/","excerpt":"","text":"更换成好看的hexo主题先给大家推荐几种Hexo主题 六款Hexo主题推荐1.Sakura https://github.com/honjun/hexo-theme-sakura2.Matery https://github.com/blinkfox/hexo-theme-matery4.Butterfly https://github.com/jerryc127/hexo-theme-butterfly5.Next https://github.com/theme-next/hexo-theme-next6.Hexo-Theme-Yun https://github.com/YunYouJun/hexo-theme-yun 这里本人使用的是 Hexo-Theme-Yun 提醒大家一下：有的主题是需要下载插件的，请好好阅读主题的文档！还有想要修改博客一些配置内容的也可以参考文档，这些都有的。 12345hexo cleanhexo ghexo s 访问 http://localhost:4000/修改主题成功 然后推送到github上面 1hexo d","categories":[],"tags":[]},{"title":"Jenkins图文详细安装教程","slug":"Jenkins图文详细安装教程","date":"2020-05-03T11:27:19.288Z","updated":"2020-05-03T11:24:38.030Z","comments":true,"path":"2020/05/03/Jenkins图文详细安装教程/","link":"","permalink":"http://yoursite.com/2020/05/03/Jenkins%E5%9B%BE%E6%96%87%E8%AF%A6%E7%BB%86%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B/","excerpt":"","text":"一、安装jdkJdk 提取码：545u 1.上传或下载安装包 1cd/usr/local (将安装包放在目录下) xftp 提取码：gewq 可使用xftp进行传输文件 2.解压安装包 1tar -zxvf jdk-8u161-linux-x64.tar 3.修改环境变量 123456789vim /etc/profileexport JAVA_HOME=/usr/local/jdkexport JRE_HOME=$JAVA_HOME/jreexport CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/libexport PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin 1source /etc/profile 通过命令source /etc/profile让profile文件立即生效 4.测试是否jdk安装成功 1java -version 出现版本号及成功。 二、安装Maven1. 上传或下载安装包Maven 提取码：o51k 1cd/usr/local (将安装包放在目录下) 2. 解压安装包 1tar -zxvf apache-maven-3.6.3-bin.tar.gz 3. 修改环境变量 12345678vim /etc/profileexport MAVEN_HOME=/usr/local/apache-maven-3.6.3export PATH=$MAVEN_HOME/bin:$PATH通过命令source /etc/profile让profile文件立即生效source /etc/profile 4. 测试是否安装成功 1mvn –v 三、安装git1yum -y install git 四、安装Docker1. 安装必要的一些系统工具 1yum install -y yum-utils device-mapper-persistent-data lvm2 2. 添加软件源信息 1yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 3. 更新并安装Docker-CE 123yum makecache fastyum -y install docker-ce 4. 开启Docker服务 1service docker start 5. 测试是否安装成功 1docker -v 五、安装Jenkinsjenkins 提取码：jfrh 采用war包安装方式 1. 上传文件 12345cd/usr/local (将安装包放在目录下)mkdir jenkinscd jenkins/ 2. 启动 1nohup java -jar /usr/local/jenkins/jenkins.war &gt;/usr/local/jenkins/jenkins.out &amp; 按两次空格 3. 访问 123456http://ip(自己的ip地址):8080访问失败的要开放8080端口firewall-cmd --zone=public --add-port=8080/tcp --permanentfirewall-cmd --reload (重启防火墙生效) 获取管理员密码 4. 看到这一步，先不要点安装，关闭浏览器，配置国内镜像 4.1 结束jenkins进程 4.2 进入updates目录配置镜像 1cd /root/.jenkins/updates 1sed -i 's/http:\\/\\/updates.jenkins-ci.org\\/download/https:\\/\\/mirrors.tuna.tsinghua.edu.cn\\/jenkins/g' default.json &amp;&amp; sed -i 's/http:\\/\\/www.google.com/https:\\/\\/www.baidu.com/g' default.json 如果前边Jenkins用sudo启动的话，那么这里的两个sed前均需要加上sudo没有提示说明成功 5. 启动Jenkins，安装插件 1nohup java -jar /usr/local/jenkins/jenkins.war &gt;/usr/local/jenkins/jenkins.out &amp; 恭喜你，安装成功！","categories":[],"tags":[]},{"title":"超详细Docker安装mysql并进行挂载","slug":"超详细Docker安装mysql并进行挂载","date":"2020-05-03T11:27:17.699Z","updated":"2020-05-03T11:24:24.009Z","comments":true,"path":"2020/05/03/超详细Docker安装mysql并进行挂载/","link":"","permalink":"http://yoursite.com/2020/05/03/%E8%B6%85%E8%AF%A6%E7%BB%86Docker%E5%AE%89%E8%A3%85mysql%E5%B9%B6%E8%BF%9B%E8%A1%8C%E6%8C%82%E8%BD%BD/","excerpt":"","text":"1、下载mysql 5.7镜像1docker pull mysql:5.7 2、创建mysql容器并启动1docker run -d -p 3306:3306 -e MYSQL_USER=\"ppx\" -e MYSQL_PASSWORD=\"123456\" -e MYSQL_ROOT_PASSWORD=\"123456\" --name mysqltest1 mysql:5.7 --character-set-server=utf8 --collation-server=utf8_general_ci 对上述参数进行解释： -e MYSQL_USER=&quot;&quot; ：设置用户名 -e MYSQL_PASSWORD=&quot;&quot;：设置该用户的密码 -e MYSQL_ROOT_PASSWORD=&quot;&quot;：设置root用户密码 --character-set-server=utf8：设置字符集为utf8 --collation-server=utf8_general_cli：设置字符规则为utf8_general_cli3、对mysql进行挂载1234567891011121314151617mkdir /optmkdir /opt/mysqlmkdir /opt/mysql/confmkdir /opt/mysql/data 创建并修改my.cnf配置文件vim /opt/mysql/conf/my.cnf my.cnf添加如下内容：[mysqld]user=mysqlcharacter-set-server=utf8default_authentication_plugin=mysql_native_password[client]default-character-set=utf8[mysql]default-character-set=utf8 挂载目录可以按照自己想法建，但上下级关系要正确，即mysql下有conf 和 data。 4、创建容器并启动1docker run -d -p 3307:3306 --privileged=true -v /opt/mysql/conf/my.cnf:/etc/mysql/my.cnf -v /opt/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=123456 --name mysql02 mysql:5.7 参数说明： --privileged=true：容器内的root拥有真正root权限，否则容器内root只是外部普通用户权限 -v /opt/mysql/conf/my.cnf:/etc/my.cnf：映射配置文件 -v /opt/mysql/data:/var/lib/mysql：映射数据目录","categories":[],"tags":[]},{"title":"Nacos详细集群配置方法及Nginx反向代理","slug":"Nacos详细集群配置方法及Nginx反向代理","date":"2020-05-03T11:27:15.928Z","updated":"2020-05-03T11:24:53.853Z","comments":true,"path":"2020/05/03/Nacos详细集群配置方法及Nginx反向代理/","link":"","permalink":"http://yoursite.com/2020/05/03/Nacos%E8%AF%A6%E7%BB%86%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%8F%8ANginx%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86/","excerpt":"","text":"1、下载NacosNacos下载地址：https://github.com/alibaba/nacos/releases/tag/1.2.0 2、配置Nacos(1) 、安装配置在/opt下创建一个文件夹 1mkdir mynacos 可以使用xftp将下载好的压缩包传输到该文件夹中 使用该命令解压即可得到nacos文件夹 1tar -zxvf nacos-server-1.2.0.tar.gz 解压好后，进入到conf目录下进行集群配置 123cd /opt/nacos/confcp cluster.conf.example cluster.confvim cluster.conf cp cluster.conf.example cluster.conf 是将conf目录下的cluster.conf.example拷贝一份以免，之后操作不当导致cluster.conf.example 添加内容 123192.168.204.128:3333192.168.204.128:4444192.168.204.128:5555 使用下命令查看端口 1hostname -i (2) 、创建数据库在conf目录下找到nacos-mysql.sql文件. 可以复制该文件的内容，到Navicat中选中nacos_config数据库，然后点击查询在点击新建查询 直接右键数据库，运行SQL文件然后选择nacos-mysql.sql文件.运行后的得到然后再配置conf/application.properties文件 12345spring.datasource.platform=mysqldb.num=1db.url.0=jdbc:mysql://填自己的端口号:3306/nacos_config?characterEncoding=utf8&amp;connectTimeout=1000&amp;socketTimeout=3000&amp;autoReconnect=truedb.user=用户名db.password=密码 (3) 、关闭防火墙或者开放端口(如果是开放端口记得重启防火墙) 1234systemctl stop firewalldsudo firewall-cmd --add-port=80/tcp --permanent (80为这次需要开放的端口)firewall-cmd --reload 查看开放的端口号 1firewall-cmd --list-all 3、配置Nginxnginx常用命令如下： 123456nginx #启动nginxnginx -s quit #快速停止nginxnginx -V #查看版本，以及配置文件地址nginx -v #查看版本nginx -s reload|reopen|stop|quit #重新加载配置|重启|快速停止|安全关闭nginxnginx -h #帮助 修改配置 1vim /usr/local/nginx/conf/nginx.conf 配置反向代理 12345678910111213141516171819upstream cluster&#123; server 192.168.204.128:3333; server 192.168.204.128:4444; server 192.168.204.128:5555; &#125; server &#123; listen 1111; server_name localhost; #charset koi8-r; #access_log logs/host.access.log main; location / &#123; # root html; # index index.html index.htm; proxy_pass http://cluster; &#125; 修改好后进入到nacos下的bin下 12cd /opt/mynacos/nacos/bin/vim startup.sh 修改好后启动nacos 123./startup.sh -p 3333./startup.sh -p 4444./startup.sh -p 5555 如果执行报错则： 1chmod u+x *.sh 然后再启动nacos nacos启动完毕，则启动nginx 123cd /usr/local/nginx/sbin/./nginx 在浏览器访问 1http://192.168.204.128:1111/nacos/ 看到nacos表示成功！","categories":[],"tags":[]},{"title":"欢迎使用CSDN-markdown编辑器","slug":"欢迎使用CSDN-markdown编辑器","date":"2020-05-02T00:09:26.006Z","updated":"2020-05-02T00:09:26.008Z","comments":true,"path":"2020/05/02/欢迎使用CSDN-markdown编辑器/","link":"","permalink":"http://yoursite.com/2020/05/02/%E6%AC%A2%E8%BF%8E%E4%BD%BF%E7%94%A8CSDN-markdown%E7%BC%96%E8%BE%91%E5%99%A8/","excerpt":"","text":"@[CSDN] 欢迎使用Markdown编辑器你好！ 这是你第一次使用 Markdown编辑器 所展示的欢迎页。如果你想学习如何使用Markdown编辑器, 可以仔细阅读这篇文章，了解一下Markdown的基本语法知识。 新的改变我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客： 全新的界面设计 ，将会带来全新的写作体验； 在创作中心设置你喜爱的代码高亮样式，Markdown 将代码片显示选择的高亮样式 进行展示； 增加了 图片拖拽 功能，你可以将本地的图片直接拖拽到编辑区域直接展示； 全新的 KaTeX数学公式 语法； 增加了支持甘特图的mermaid语法^1 功能； 增加了 多屏幕编辑 Markdown文章功能； 增加了 焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置 等功能，功能按钮位于编辑区域与预览区域中间； 增加了 检查列表 功能。 功能快捷键撤销：Ctrl/Command + Z重做：Ctrl/Command + Y加粗：Ctrl/Command + B斜体：Ctrl/Command + I标题：Ctrl/Command + Shift + H无序列表：Ctrl/Command + Shift + U有序列表：Ctrl/Command + Shift + O检查列表：Ctrl/Command + Shift + C插入代码：Ctrl/Command + Shift + K插入链接：Ctrl/Command + Shift + L插入图片：Ctrl/Command + Shift + G查找：Ctrl/Command + F替换：Ctrl/Command + G 合理的创建标题，有助于目录的生成直接输入1次#，并按下space后，将生成1级标题。输入2次#，并按下space后，将生成2级标题。以此类推，我们支持6级标题。有助于使用TOC语法后生成一个完美的目录。 如何改变文本的样式强调文本 强调文本 加粗文本 加粗文本 ==标记文本== 删除文本 引用文本 H2O is是液体。 2^10^ 运算结果是 1024. 插入链接与图片链接: link. 图片: 带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw =30x30) 居中的图片: 居中并且带尺寸的图片: ![Alt](https://imgconvert.csdnimg.cn/aHR0cHM6Ly9hdmF0YXIuY3Nkbi5uZXQvNy83L0IvMV9yYWxmX2h4MTYzY29tLmpwZw#pic_center =30x30) 当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。 如何插入一段漂亮的代码片去博客设置页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 代码片. 12// An highlighted blockvar foo = 'bar'; 生成一个适合你的列表 项目 项目 项目 项目1 项目2 项目3 计划任务 完成任务 创建一个表格一个简单的表格是这么创建的：项目 | Value——– | —–电脑 | $1600手机 | $12导管 | $1 设定内容居中、居左、居右使用:---------:居中使用:----------居左使用----------:居右| 第一列 | 第二列 | 第三列 ||:———–:| ————-:|:————-|| 第一列文本居中 | 第二列文本居右 | 第三列文本居左 | SmartyPantsSmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：| TYPE |ASCII |HTML|—————-|——————————-|—————————–||Single backticks|&#39;Isn&#39;t this fun?&#39; |’Isn’t this fun?’ ||Quotes |&quot;Isn&#39;t this fun?&quot; |”Isn’t this fun?” ||Dashes |-- is en-dash, --- is em-dash|– is en-dash, — is em-dash| 创建一个自定义列表MarkdownText-to-HTML conversion toolAuthors: JohnLuke如何创建一个注脚一个具有注脚的文本。^2 注释也是必不可少的Markdown将文本转换为 HTML。 *[HTML]: 超文本标记语言 KaTeX数学公式您可以使用渲染LaTeX数学表达式 KaTeX: Gamma公式展示 $\\Gamma(n) = (n-1)!\\quad\\foralln\\in\\mathbb N$ 是通过欧拉积分 $$\\Gamma(z) = \\int_0^\\infty t^{z-1}e^{-t}dt,.$$ 你可以找到更多关于的信息 LaTeX 数学表达式here. 新的甘特图功能，丰富你的文章12345678gantt dateFormat YYYY-MM-DD title Adding GANTT diagram functionality to mermaid section 现有任务 已完成 :done, des1, 2014-01-06,2014-01-08 进行中 :active, des2, 2014-01-09, 3d 计划一 : des3, after des2, 5d 计划二 : des4, after des3, 5d 关于 甘特图 语法，参考 这儿, UML 图表可以使用UML图表进行渲染。 Mermaid. 例如下面产生的一个序列图： 123456789sequenceDiagram张三 -&gt;&gt; 李四: 你好！李四, 最近怎么样?李四--&gt;&gt;王五: 你最近怎么样，王五？李四--x 张三: 我很好，谢谢!李四-x 王五: 我很好，谢谢!Note right of 王五: 李四想了很长时间, 文字太长了&lt;br&#x2F;&gt;不适合放在一行.李四--&gt;&gt;张三: 打量着王五...张三-&gt;&gt;王五: 很好... 王五, 你怎么样? 这将产生一个流程图。: 12345graph LRA[长方形] -- 链接 --&gt; B((圆))A --&gt; C(圆角长方形)B --&gt; D&#123;菱形&#125;C --&gt; D 关于 Mermaid 语法，参考 这儿, FLowchart流程图我们依旧会支持flowchart的流程图： 123456789flowchatst&#x3D;&gt;start: 开始e&#x3D;&gt;end: 结束op&#x3D;&gt;operation: 我的操作cond&#x3D;&gt;condition: 确认？st-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op 关于 Flowchart流程图 语法，参考 这儿. 导出与导入导出如果你想尝试使用此编辑器, 你可以在此篇文章任意编辑。当你完成了一篇文章的写作, 在上方工具栏找到 文章导出 ，生成一个.md文件或者.html文件进行本地保存。 导入如果你想加载一篇你写过的.md文件，在上方工具栏可以选择导入功能进行对应扩展名的文件导入，继续你的创作。","categories":[],"tags":[]},{"title":"我的第一篇博客","slug":"我的第一篇博客","date":"2020-05-01T14:38:53.000Z","updated":"2020-05-01T14:39:57.969Z","comments":true,"path":"2020/05/01/我的第一篇博客/","link":"","permalink":"http://yoursite.com/2020/05/01/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/","excerpt":"","text":"第一章内容 第二章内容 参考文献www.baidu.com","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-05-01T14:33:42.468Z","updated":"2020-05-01T14:33:42.468Z","comments":true,"path":"2020/05/01/hello-world/","link":"","permalink":"http://yoursite.com/2020/05/01/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}